<refentry id="libtracker-common-tracker-file-utils">
<refmeta>
<refentrytitle role="top_of_page" id="libtracker-common-tracker-file-utils.top_of_page">tracker-file-utils</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBTRACKER-COMMON Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>tracker-file-utils</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libtracker-common-tracker-file-utils.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="FILE--CAPS">FILE</link>*               <link linkend="tracker-file-open">tracker_file_open</link>                   (const <link linkend="gchar">gchar</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *how,
                                                         <link linkend="gboolean">gboolean</link> sequential);
<link linkend="void">void</link>                <link linkend="tracker-file-close">tracker_file_close</link>                  (<link linkend="FILE--CAPS">FILE</link> *file,
                                                         <link linkend="gboolean">gboolean</link> need_again_soon);
<link linkend="goffset">goffset</link>             <link linkend="tracker-file-get-size">tracker_file_get_size</link>               (const <link linkend="gchar">gchar</link> *uri);
<link linkend="guint64">guint64</link>             <link linkend="tracker-file-get-mtime">tracker_file_get_mtime</link>              (const <link linkend="gchar">gchar</link> *uri);
<link linkend="gchar">gchar</link> *             <link linkend="tracker-file-get-mime-type">tracker_file_get_mime_type</link>          (<link linkend="GFile">GFile</link> *file);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-file-system-has-enough-space">tracker_file_system_has_enough_space</link>
                                                        (const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gulong">gulong</link> required_bytes,
                                                         <link linkend="gboolean">gboolean</link> creating_db);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-file-is-locked">tracker_file_is_locked</link>              (<link linkend="GFile">GFile</link> *file);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-file-lock">tracker_file_lock</link>                   (<link linkend="GFile">GFile</link> *file);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-file-unlock">tracker_file_unlock</link>                 (<link linkend="GFile">GFile</link> *file);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-path-is-in-path">tracker_path_is_in_path</link>             (const <link linkend="gchar">gchar</link> *path,
                                                         const <link linkend="gchar">gchar</link> *in_path);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-path-has-write-access-or-was-created">tracker_path_has_write_access_or_was_created</link>
                                                        (const <link linkend="gchar">gchar</link> *path);
<link linkend="GSList">GSList</link> *            <link linkend="tracker-path-list-filter-duplicates">tracker_path_list_filter_duplicates</link> (<link linkend="GSList">GSList</link> *roots,
                                                         const <link linkend="gchar">gchar</link> *basename_exception_prefix,
                                                         <link linkend="gboolean">gboolean</link> is_recursive);
<link linkend="gchar">gchar</link> *             <link linkend="tracker-path-evaluate-name">tracker_path_evaluate_name</link>          (const <link linkend="gchar">gchar</link> *uri);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-env-check-xdg-dirs">tracker_env_check_xdg_dirs</link>          (void);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libtracker-common-tracker-file-utils.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libtracker-common-tracker-file-utils.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="tracker-file-open" role="function">
<title>tracker_file_open ()</title>
<indexterm zone="tracker-file-open"><primary sortas="tracker_file_open">tracker_file_open</primary></indexterm><programlisting><link linkend="FILE--CAPS">FILE</link>*               tracker_file_open                   (const <link linkend="gchar">gchar</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *how,
                                                         <link linkend="gboolean">gboolean</link> sequential);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>how</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sequential</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-close" role="function">
<title>tracker_file_close ()</title>
<indexterm zone="tracker-file-close"><primary sortas="tracker_file_close">tracker_file_close</primary></indexterm><programlisting><link linkend="void">void</link>                tracker_file_close                  (<link linkend="FILE--CAPS">FILE</link> *file,
                                                         <link linkend="gboolean">gboolean</link> need_again_soon);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>need_again_soon</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-get-size" role="function">
<title>tracker_file_get_size ()</title>
<indexterm zone="tracker-file-get-size"><primary sortas="tracker_file_get_size">tracker_file_get_size</primary></indexterm><programlisting><link linkend="goffset">goffset</link>             tracker_file_get_size               (const <link linkend="gchar">gchar</link> *uri);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-get-mtime" role="function">
<title>tracker_file_get_mtime ()</title>
<indexterm zone="tracker-file-get-mtime"><primary sortas="tracker_file_get_mtime">tracker_file_get_mtime</primary></indexterm><programlisting><link linkend="guint64">guint64</link>             tracker_file_get_mtime              (const <link linkend="gchar">gchar</link> *uri);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-get-mime-type" role="function">
<title>tracker_file_get_mime_type ()</title>
<indexterm zone="tracker-file-get-mime-type"><primary sortas="tracker_file_get_mime_type">tracker_file_get_mime_type</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             tracker_file_get_mime_type          (<link linkend="GFile">GFile</link> *file);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-system-has-enough-space" role="function">
<title>tracker_file_system_has_enough_space ()</title>
<indexterm zone="tracker-file-system-has-enough-space"><primary sortas="tracker_file_system_has_enough_space">tracker_file_system_has_enough_space</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_file_system_has_enough_space
                                                        (const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gulong">gulong</link> required_bytes,
                                                         <link linkend="gboolean">gboolean</link> creating_db);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>required_bytes</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>creating_db</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-is-locked" role="function">
<title>tracker_file_is_locked ()</title>
<indexterm zone="tracker-file-is-locked"><primary sortas="tracker_file_is_locked">tracker_file_is_locked</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_file_is_locked              (<link linkend="GFile">GFile</link> *file);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-lock" role="function">
<title>tracker_file_lock ()</title>
<indexterm zone="tracker-file-lock"><primary sortas="tracker_file_lock">tracker_file_lock</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_file_lock                   (<link linkend="GFile">GFile</link> *file);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-file-unlock" role="function">
<title>tracker_file_unlock ()</title>
<indexterm zone="tracker-file-unlock"><primary sortas="tracker_file_unlock">tracker_file_unlock</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_file_unlock                 (<link linkend="GFile">GFile</link> *file);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-path-is-in-path" role="function">
<title>tracker_path_is_in_path ()</title>
<indexterm zone="tracker-path-is-in-path"><primary sortas="tracker_path_is_in_path">tracker_path_is_in_path</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_path_is_in_path             (const <link linkend="gchar">gchar</link> *path,
                                                         const <link linkend="gchar">gchar</link> *in_path);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_path</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-path-has-write-access-or-was-created" role="function">
<title>tracker_path_has_write_access_or_was_created ()</title>
<indexterm zone="tracker-path-has-write-access-or-was-created"><primary sortas="tracker_path_has_write_access_or_was_created">tracker_path_has_write_access_or_was_created</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_path_has_write_access_or_was_created
                                                        (const <link linkend="gchar">gchar</link> *path);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-path-list-filter-duplicates" role="function">
<title>tracker_path_list_filter_duplicates ()</title>
<indexterm zone="tracker-path-list-filter-duplicates"><primary sortas="tracker_path_list_filter_duplicates">tracker_path_list_filter_duplicates</primary></indexterm><programlisting><link linkend="GSList">GSList</link> *            tracker_path_list_filter_duplicates (<link linkend="GSList">GSList</link> *roots,
                                                         const <link linkend="gchar">gchar</link> *basename_exception_prefix,
                                                         <link linkend="gboolean">gboolean</link> is_recursive);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>roots</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>basename_exception_prefix</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_recursive</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-path-evaluate-name" role="function">
<title>tracker_path_evaluate_name ()</title>
<indexterm zone="tracker-path-evaluate-name"><primary sortas="tracker_path_evaluate_name">tracker_path_evaluate_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             tracker_path_evaluate_name          (const <link linkend="gchar">gchar</link> *uri);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-env-check-xdg-dirs" role="function">
<title>tracker_env_check_xdg_dirs ()</title>
<indexterm zone="tracker-env-check-xdg-dirs"><primary sortas="tracker_env_check_xdg_dirs">tracker_env_check_xdg_dirs</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_env_check_xdg_dirs          (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
