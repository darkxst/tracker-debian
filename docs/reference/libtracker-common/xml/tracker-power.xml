<refentry id="libtracker-common-TrackerPower">
<refmeta>
<refentrytitle role="top_of_page" id="libtracker-common-TrackerPower.top_of_page">TrackerPower</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBTRACKER-COMMON Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TrackerPower</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libtracker-common-TrackerPower.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="TrackerPower">TrackerPower</link>;
                    <link linkend="TrackerPowerClass">TrackerPowerClass</link>;
<link linkend="TrackerPower">TrackerPower</link> *      <link linkend="tracker-power-new">tracker_power_new</link>                   (void);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-power-get-on-battery">tracker_power_get_on_battery</link>        (<link linkend="TrackerPower">TrackerPower</link> *power);
<link linkend="gboolean">gboolean</link>            <link linkend="tracker-power-get-on-low-battery">tracker_power_get_on_low_battery</link>    (<link linkend="TrackerPower">TrackerPower</link> *power);
<link linkend="gdouble">gdouble</link>             <link linkend="tracker-power-get-battery-percentage">tracker_power_get_battery_percentage</link>
                                                        (<link linkend="TrackerPower">TrackerPower</link> *power);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libtracker-common-TrackerPower.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libtracker-common-TrackerPower.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TrackerPower" role="struct">
<title>TrackerPower</title>
<indexterm zone="TrackerPower"><primary sortas="TrackerPower">TrackerPower</primary></indexterm><programlisting>typedef struct {
	GObject parent;
} TrackerPower;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="TrackerPowerClass" role="struct">
<title>TrackerPowerClass</title>
<indexterm zone="TrackerPowerClass"><primary sortas="TrackerPowerClass">TrackerPowerClass</primary></indexterm><programlisting>typedef struct {
	GObjectClass parent_class;
} TrackerPowerClass;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="tracker-power-new" role="function">
<title>tracker_power_new ()</title>
<indexterm zone="tracker-power-new"><primary sortas="tracker_power_new">tracker_power_new</primary></indexterm><programlisting><link linkend="TrackerPower">TrackerPower</link> *      tracker_power_new                   (void);</programlisting>
<para>
Creates a new instance of <link linkend="TrackerPower"><type>TrackerPower</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The newly created <link linkend="TrackerPower"><type>TrackerPower</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-power-get-on-battery" role="function">
<title>tracker_power_get_on_battery ()</title>
<indexterm zone="tracker-power-get-on-battery"><primary sortas="tracker_power_get_on_battery">tracker_power_get_on_battery</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_power_get_on_battery        (<link linkend="TrackerPower">TrackerPower</link> *power);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>power</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-power-get-on-low-battery" role="function">
<title>tracker_power_get_on_low_battery ()</title>
<indexterm zone="tracker-power-get-on-low-battery"><primary sortas="tracker_power_get_on_low_battery">tracker_power_get_on_low_battery</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tracker_power_get_on_low_battery    (<link linkend="TrackerPower">TrackerPower</link> *power);</programlisting>
<para>
Returns whether the computer has batteries.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>power</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TrackerPower"><type>TrackerPower</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><type>TRUE</type></link> if the computer has batteries available.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tracker-power-get-battery-percentage" role="function">
<title>tracker_power_get_battery_percentage ()</title>
<indexterm zone="tracker-power-get-battery-percentage"><primary sortas="tracker_power_get_battery_percentage">tracker_power_get_battery_percentage</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             tracker_power_get_battery_percentage
                                                        (<link linkend="TrackerPower">TrackerPower</link> *power);</programlisting>
<para>
Returns the percentage of battery power available.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>power</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TrackerPower"><type>TrackerPower</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="gdouble"><type>gdouble</type></link> representing the percentage between 0.0 and 1.0.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
